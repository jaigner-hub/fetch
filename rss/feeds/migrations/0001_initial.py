# Generated by Django 5.2.5 on 2025-08-13 12:30

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Feed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feed_url', models.URLField(help_text='URL of the RSS feed or sitemap', unique=True)),
                ('feed_type', models.CharField(choices=[('RSS', 'RSS Feed'), ('ATOM', 'Atom Feed'), ('SITEMAP', 'Sitemap')], max_length=10)),
                ('title', models.CharField(blank=True, help_text='Title of the feed', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Description of the feed')),
                ('last_checked', models.DateTimeField(blank=True, help_text='Last time this feed was checked', null=True)),
                ('last_successful_fetch', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(default=True, help_text='Whether to actively check this feed')),
                ('error_count', models.IntegerField(default=0, help_text='Number of consecutive fetch errors')),
                ('last_error', models.TextField(blank=True, help_text='Last error message')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['website', 'feed_type', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Website',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(help_text='Base URL of the website', unique=True)),
                ('name', models.CharField(help_text='Name of the website', max_length=255)),
                ('active', models.BooleanField(default=True, help_text='Whether to actively crawl this website')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='FetchLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('success', models.BooleanField(default=False)),
                ('new_articles', models.IntegerField(default=0)),
                ('updated_articles', models.IntegerField(default=0)),
                ('error_message', models.TextField(blank=True)),
                ('feed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fetch_logs', to='feeds.feed')),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.AddField(
            model_name='feed',
            name='website',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feeds', to='feeds.website'),
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('url', models.URLField(db_index=True, unique=True)),
                ('content', models.TextField(blank=True, help_text='Full text content of the article')),
                ('summary', models.TextField(blank=True, help_text='Summary or excerpt')),
                ('author', models.CharField(blank=True, max_length=255)),
                ('published_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('fetched_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content_hash', models.CharField(blank=True, db_index=True, help_text='Hash of content to detect updates', max_length=64)),
                ('raw_data', models.JSONField(blank=True, default=dict, help_text='Original raw data from feed')),
                ('feed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articles', to='feeds.feed')),
            ],
            options={
                'ordering': ['-published_date', '-fetched_at'],
                'indexes': [models.Index(fields=['-published_date'], name='feeds_artic_publish_88411e_idx'), models.Index(fields=['feed', '-published_date'], name='feeds_artic_feed_id_33fb04_idx')],
            },
        ),
    ]
